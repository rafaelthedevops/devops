---
- name: Install epel repositorio
  yum: name=epel-release state=present

- name: Install MySQL packages dependencies
  yum: name="{{item}}" state=present
  with_items:
      - python-devel
      - gcc
      - python
      - python-pip
      - libselinux-python

#- name: add mysql repository
#  command: rpm -Uvh http://dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm

#- name: Install MySQL packages 
#  yum: name="{{item}}" state=present
#  with_items:
#      - mysql
#      - mysql-server
#      - mysql-devel
- name: install mariadb and mariadb-server
  yum: name={{ item }} state=present
  with_items:
    - mariadb
    - mariadb-server
    - mariadb-devel

- name: start and enable mariadb
  service: name=mariadb state=started enabled=yes

- name: upgrade pip
  command: pip install --upgrade pip

- name: Install the Python MySQLB module
  pip: name=MySQL-python

#- name: deploy /root/.my.cnf
#  template: src=root.my.cnf.j2 dest=/root/.my.cnf owner=root group=root mode=0600

- name: Remove the MySQL test database
  action: mysql_db db=test state=absent

- name: Set root password(x)
  mysql_user: 
    name: root 
    host: "{{ item }}"
    password: "{{ mysql_root_password}}" 
    login_user: root
    login_password: "{{ mysql_root_password }}"
    check_implicit_admin: yes 
    priv: "*.*:ALL,GRANT" 
    state: present
  with_items:
      - "{{ ansible_hostname }}"
      - 127.0.0.1
      - ::1
      - localhost

#- name: Create local my.cnf for root user
#  template: src=my.cnf dest=/root/.my.cnf owner=root mode=0600

- name: Restart the MySQL service
  action: service name=mariadb state=restarted enabled=true



- name: deploy /root/.my.cnf
  template: src=root.my.cnf.j2 dest=/root/.my.cnf owner=root group=root mode=0600

- name: set the mysql root password
  mysql_user: name=root password={{ mysql_root_password }} state=present

#- name: Create the flask database

#  mysql_db: name=flask_db state=present
#- name: firewalld stopped
#  service: name=firewalld state=stopped enabled=no

#- name: deploy /root/.my.cnf
#  template: src=root.my.cnf.j2 dest=/root/.my.cnf owner=root group=root mode=0600

- name: deploy ICINGA-release.repo
  copy: src=ICINGA-release.repo dest=/etc/yum.repos.d/ICINGA-release.repo

- name: import ICINGA GPG KEY
  rpm_key: key=http://packages.icinga.org/icinga.key state=present

- name: install icinga2
  yum: name=icinga2 state=present

- name: start and enable icinga2
  service: name=icinga2 state=started enabled=yes

- name: install icinga2-ido-mysql
  yum: name=icinga2-ido-mysql state=present

- name: deploy /etc/icinga2/features-available/ido-mysql.conf
  template: src=ido-mysql.conf.j2 dest=/etc/icinga2/features-available/ido-mysql.conf owner=icinga group=icinga mode=0640
  notify: restart-icinga2

- name: create icinga database
  mysql_db: name=icinga state=present

- name: crudely check if icinga database schema imported
  stat: path=/var/lib/mysql/icinga/icinga_acknowledgements.frm
  register: icinga_schema

- name: import icinga database schema
  mysql_db: state=import name=icinga target=/usr/share/icinga2-ido-mysql/schema/mysql.sql
  when: not icinga_schema.stat.exists
# ------- disable features to teste
- name: check if ido-mysql feature enabled
  stat: path=/etc/icinga2/features-enabled/ido-mysql.conf
  register: ido_mysql_enabled
  changed_when: false

- name: icinga2 feature enable ido-mysql
  shell: icinga2 feature enable ido-mysql
  notify: restart-icinga2
  when: not ido_mysql_enabled.stat.exists

- name: install httpd
  yum: name=httpd state=present

- name: start and enable httpd
  service: name=httpd state=started enabled=yes

- name: check if ido-mysql feature enabled
  stat: path=/etc/icinga2/features-enabled/command.conf
  register: command_enabled
  changed_when: false

- name: icinga2 feature enable command
  shell: icinga2 feature enable command
  notify: restart-icinga2
  when: not command_enabled.stat.exists

- name: usermod -a -G icingacmd apache
  user: name=apache groups=icingacmd append=yes

- name: install php
  yum: name=php state=present
  notify: restart-httpd

- name: install icingaweb2
  yum: name=icinga-web state=present
# -----x-----
#- name: Install Icinga WEB
#  yum: name=icinga-web state=present

#- name: Install Icinga Web-ido
#  yum: name=icinga-web-mysql state=present

#- name: Create a Database for Icinga WEB
#  mysql_db: name={{ icinga2_web_db_dbuser }} state=present
#  register: icinga_web_db

#- name: Import Web schema
#  mysql_db: name={{ icinga2_web_db_dbuser }} target={{ icinga2_web_mysql_schema }} state=import
  #when: icinga_web_db.changed

#- name: Create Icinga Web Database User and configure Grants
#  mysql_user: name={{ icinga2_web_db_dbuser }}
#              password={{ icinga2_web_db_dbuser }}
#              state=present
#              priv="{{ icinga2_web_db_dbuser }}.*:GRANT,INSERT,SELECT,UPDATE,DELETE,DROP,CREATE VIEW,INDEX,EXECUTE"


- name: install icingacli
  yum: name=icingacli state=present

- name: fixup php.ini (date.timezone)
  replace: dest=/etc/php.ini regexp='^;date.timezone =$' replace="date.timezone = {{ php_timezone }}" backup=yes
  notify: restart-httpd

- name: create icingaweb2 group
  group: name=icingaweb2 state=present

- name: usermod -a -G icingaweb2 apache
  user: name=apache groups=icingaweb2 append=yes

- name: install php-ldap
  yum: name=php-ldap state=present
  notify: restart-httpd

- name: create icingaweb2 database
  mysql_db: name=icingaweb2 state=present

- name: crudely check if icingaweb2 database schema imported
  stat: path=/var/lib/mysql/icingaweb2/icingaweb_group.frm
  register: icingaweb2_schema

- name: import icingaweb2 database schema
  mysql_db: state=import name=icingaweb2 target=/usr/share/doc/icingaweb2/schema/mysql.schema.sql
  when: not icingaweb2_schema.stat.exists

- name: install nagios-plugins-all
  yum: name=nagios-plugins-all state=present

- name: setup icingaweb2 directory and generate a Token
  shell: "mkdir -m 2770 /etc/icingaweb2; chgrp icingaweb2 /etc/icingaweb2; head -c 12 /dev/urandom | base64 | tee /etc/icingaweb2/setup.token; chmod 0660 /etc/icingaweb2/setup.token;"

#- name: copy file
#  copy: src=icinga2.tar dest=/tmp

- name: copy icingaweb2 files for unattend setup
  unarchive: src=icinga2.tar dest=/etc/icingaweb2

- name: import configs icingaweb2
  mysql_db: state=import name=icingaweb2 target=/etc/icingaweb2/icingaweb2.sql

- name: fix permissions
  file: dest=/etc/icingaweb2 owner=apache group=icingaweb2 recurse=yes

- name: Icinga Web Installation finished!!!
  debug: msg="Login at http://IP/icinga-web with user root and password password"